@model RickApps.UploadFilesMVC.ViewModels.HomeListViewModel
@{
    ViewData["Title"] = "Item List";
}
<h1>@ViewData["Title"]</h1>

<p>Use this page to tell about the project.</p>
        <!-- Products-->
        <section class="products page-start">
            <div class="container">
                <header>
                    <div class="row d-flex align-items-center">
                        <div class="col-md-6">
                            <h1 class="heading-line">@Model.PageTitle</h1>
                        </div>
                        <div class="col-md-6">
                            <div class="filters d-flex justify-content-end">
                                @using (Html.BeginForm("List", "Home", FormMethod.Post))
                                {
                                    <label for="SortBy">Sort By:</label>
                                    @Html.DropDownListFor(vm => vm.SortBy, Model.Sorts, "Newly Added", new { Class = "filter-nameselect form-control", onchange = @"form.submit();" })
                                }
                            </div>
                        </div>
                    </div>
                </header>
                <div class="items">
                    <div class="row">
                        @foreach (Item item in Model.Items)
                                        {
                            <div class="col-lg-3 col-md-4 col-sm-6">
                                <div class="item text-center">
                                    <div class="product-image">
                                        @{ var myUrl = "~/images/MockUp/272/ring1.jpg"; }
                                        @if (item.Photos.Count > 0)
                                    {
                                        myUrl = String.Format("{0}", item.Photos.ElementAt(0).LinkToSmallImage);
                                    }
                                        <img src=@myUrl height="142" alt="ring">
                                        <div class="overlay">
                                            <ul class="list-unstyled">
                                                <li>@Html.ActionLink("View Detail", "Detail", "Home",
                                                   new { id = item.Number, sortBy = @Model.SortBy },
                                                   new { @class = "btn btn-dark" })</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <h4>
                                        @Html.ActionLink(item.Name, "Detail", "Home", 
                                       new { id = item.Number, sortBy = @Model.SortBy }, 
                                       new { @class = "item-name" })
                                    </h4>
                                    <ul class="price list-inline">
                                        <li class="list-inline-item"> <span class="price">@item.FormattedPrice</span></li>
                                    </ul>
                                </div>
                            </div>

                                            }
                    </div>
                </div>
                </div>
                </section>
